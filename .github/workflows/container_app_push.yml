env:
  BASE_IMAGE_TAG: unstable
  IMAGE_TAG: unstable
  MASTER_BRANCH_TAG: alpha
  PLATFORMS: linux/amd64,linux/arm64
  REGISTRY: ''
jobs:
  build:
    if: ${{ github.repository_owner == 'IQSS' }}
    name: Build & Test
    permissions:
      contents: read
      packages: write
      pull-requests: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout repository
      uses: actions/checkout@v3
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v3
      with:
        cache: maven
        distribution: temurin
        java-version: '17'
    - continue-on-error: true
      name: Build app and configbaker container image with local architecture and
        submodules (profile will skip tests)
      run: 'mvn -B -f modules/dataverse-parent -P ct -pl edu.harvard.iq:dataverse
        -am install

        '
  check-secrets:
    name: Check for Secrets Availability
    needs: build
    outputs:
      available: ${{ steps.secret-check.outputs.available }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      id: secret-check
      run: "if [ \"${{ secrets.DOCKERHUB_TOKEN }}\" != '' ]; then\n    echo \"available=true\"\
        \ >> $GITHUB_OUTPUT;\nelse\n    echo \"available=false\" >> $GITHUB_OUTPUT;\n\
        fi\n"
      shell: bash
  deploy:
    if: needs.check-secrets.outputs.available == 'true' && ( github.event_name !=
      'push' || ( github.event_name == 'push' && contains(fromJSON('["develop", "master"]'),
      github.ref_name)))
    name: Package & Publish
    needs: check-secrets
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
    - continue-on-error: true
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: '17'
    - continue-on-error: true
      if: github.event_name != 'pull_request'
      name: Log in to Docker Hub registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
    - continue-on-error: true
      if: ${{ github.event_name == 'pull_request' }}
      name: Login to Github Container Registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GHCR_TOKEN }}
        registry: ghcr.io
        username: ${{ secrets.GHCR_USERNAME }}
    - continue-on-error: true
      name: Set up QEMU for multi-arch builds
      uses: docker/setup-qemu-action@v2
    - continue-on-error: true
      if: ${{ github.ref_name == 'master' }}
      name: Re-set image tag based on branch (if master)
      run: 'echo "IMAGE_TAG=${{ env.MASTER_BRANCH_TAG }}" >> $GITHUB_ENV

        echo "BASE_IMAGE_TAG=${{ env.MASTER_BRANCH_TAG }}" >> $GITHUB_ENV

        '
    - continue-on-error: true
      if: ${{ github.event_name == 'pull_request' }}
      name: Re-set image tag and container registry when on PR
      run: 'echo "IMAGE_TAG=$(echo "$GITHUB_HEAD_REF" | tr ''\\/_:&+,;#*'' ''-'')"
        >> $GITHUB_ENV

        echo "REGISTRY=''-Ddocker.registry=ghcr.io''" >> $GITHUB_ENV

        '
    - continue-on-error: true
      name: Build app and configbaker container image with local architecture and
        submodules (profile will skip tests)
      run: 'mvn -B -f modules/dataverse-parent -P ct -pl edu.harvard.iq:dataverse
        -am install

        '
    - continue-on-error: true
      name: Deploy multi-arch application and configbaker container image
      run: 'mvn  -Dapp.image.tag=${{ env.IMAGE_TAG }} -Dbase.image.tag=${{ env.BASE_IMAGE_TAG
        }} ${{ env.REGISTRY }} -Ddocker.platforms=${{ env.PLATFORMS }} -P ct deploy

        '
    - continue-on-error: true
      if: ${{ github.event_name == 'pull_request' }}
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        header: registry-push
        hide_and_recreate: true
        hide_classify: OUTDATED
        message: ':package: Pushed preview images as

          ```

          ghcr.io/gdcc/dataverse:${{ env.IMAGE_TAG }}

          ```

          ```

          ghcr.io/gdcc/configbaker:${{ env.IMAGE_TAG }}

          ```

          :ship: [See on GHCR](https://github.com/orgs/gdcc/packages/container). Use
          by referencing with full name as printed above, mind the registry name.

          '
  hub-description:
    if: ${{ github.event_name != 'pull_request' && github.ref_name == 'develop' &&
      github.repository_owner == 'IQSS' }}
    name: Push image descriptions to Docker Hub
    needs: build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
    - continue-on-error: true
      uses: peter-evans/dockerhub-description@v3
      with:
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        readme-filepath: ./src/main/docker/README.md
        repository: gdcc/dataverse
        short-description: Dataverse Application Container Image providing the executable
        username: ${{ secrets.DOCKERHUB_USERNAME }}
    - continue-on-error: true
      uses: peter-evans/dockerhub-description@v3
      with:
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        readme-filepath: ./modules/container-configbaker/README.md
        repository: gdcc/configbaker
        short-description: Dataverse Config Baker Container Image providing setup
          tooling and more
        username: ${{ secrets.DOCKERHUB_USERNAME }}
name: Application Container Image
on:
  repository_dispatch:
    types: trigger-ga___container_app_push.yml
