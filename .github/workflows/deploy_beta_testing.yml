jobs:
  build:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
    - continue-on-error: true
      uses: actions/setup-java@v3
      with:
        distribution: zulu
        java-version: '17'
    - continue-on-error: true
      name: Enable API Session Auth feature flag
      run: echo -e "dataverse.feature.api-session-auth=true" >> microprofile-config.properties
      working-directory: src/main/resources/META-INF
    - continue-on-error: true
      name: Set build number
      run: scripts/installer/custom-build-number
    - continue-on-error: true
      name: Build application war
      run: mvn package
    - continue-on-error: true
      name: Get war file name
      run: echo "war_file=$(ls *.war | head -1)">> $GITHUB_ENV
      working-directory: target
    - continue-on-error: true
      name: Upload war artifact
      uses: actions/upload-artifact@v3
      with:
        name: built-app
        path: ./target/${{ env.war_file }}
  deploy-to-payara:
    needs: build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
    - continue-on-error: true
      name: Download war artifact
      uses: actions/download-artifact@v3
      with:
        name: built-app
        path: ./
    - continue-on-error: true
      name: Get war file name
      run: echo "war_file=$(ls *.war | head -1)">> $GITHUB_ENV
    - continue-on-error: true
      name: Copy war file to remote instance
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.BETA_PAYARA_INSTANCE_HOST }}
        key: ${{ secrets.BETA_PAYARA_INSTANCE_SSH_PRIVATE_KEY }}
        overwrite: true
        source: ./${{ env.war_file }}
        target: /home/${{ secrets.BETA_PAYARA_INSTANCE_USERNAME }}
        username: ${{ secrets.BETA_PAYARA_INSTANCE_USERNAME }}
    - continue-on-error: true
      env:
        INPUT_WAR_FILE: ${{ env.war_file }}
      name: Execute payara war deployment remotely
      uses: appleboy/ssh-action@v1.0.0
      with:
        envs: INPUT_WAR_FILE
        host: ${{ secrets.BETA_PAYARA_INSTANCE_HOST }}
        key: ${{ secrets.BETA_PAYARA_INSTANCE_SSH_PRIVATE_KEY }}
        script: 'APPLICATION_NAME=dataverse-backend

          ASADMIN=''/usr/local/payara6/bin/asadmin --user admin''

          $ASADMIN undeploy $APPLICATION_NAME

          $ASADMIN stop-domain

          rm -rf /usr/local/payara6/glassfish/domains/domain1/generated

          rm -rf /usr/local/payara6/glassfish/domains/domain1/osgi-cache

          $ASADMIN start-domain

          $ASADMIN deploy --name $APPLICATION_NAME $INPUT_WAR_FILE

          $ASADMIN stop-domain

          $ASADMIN start-domain

          '
        username: ${{ secrets.BETA_PAYARA_INSTANCE_USERNAME }}
name: Deploy to Beta Testing
on:
  repository_dispatch:
    types: trigger-ga___deploy_beta_testing.yml
